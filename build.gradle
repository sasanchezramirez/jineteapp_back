buildscript {
	ext {
		springBootVersion = '2.7.1'
		lombokVersion = '1.18.22'
		springFrameWorkVersion='5.3.22'
		nettyVersion='4.1.79.Final'
	}
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:7.1.1'
    }
}

plugins {
	id 'org.springframework.boot' version("${springBootVersion}")
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "3.0"
}

jacoco {
	toolVersion = "0.8.8"
}

apply plugin: "org.owasp.dependencycheck"

dependencies {
	implementation project(':app-service')
}

group 'co.com.kiire'
version '1.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

apply from: './main.gradle'

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	finalizedBy jacocoMergedReport
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

sonarqube {
	def modules = subprojects.projectDir.collect {
		"${it.toString().replace(project.projectDir.toString() + "/", "")}"
	}
	properties {
		property 'sonar.sourceEnconding', 'UTF-8'
		property 'sonar.dependencyCheck.htmlReportPath', 'app/build/reports/dependency-check-report.html'
		property "sonar.modules", "${modules.join(',')}"
		property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
		property 'sonar.test', 'src/test'
		property 'sonar.java.binaries', ''
		property 'sonar.junit.reportsPath', ''
		property 'sonar.java.coveragePlugin', 'jacoco'
		property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir}/reports/jacoco/jacocoMergedReport/jacocoMergedReport.xml"
        property 'sonar.exclusions', '**/app/**,**/persistence/**,**/restrictivelisttransunion/**'
    }
}

tasks.named('sonarqube').configure {
    dependsOn test
}